{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"metadata": {
		"description": "CPU utilization will reach 100% on the VM shortly after deployment, causing the container OS state to turn red in ASI (ContainerOsStateUnhealthy/ContainerOsStateUnresponsive).",
		"author": "Ivan Rusakov",
		"alias": "IvanRusakov",
		"deploymentLinkInternal": "https://labboxprod.azurewebsites.net/api/Labbox?url=https://supportability.visualstudio.com/AzureIaaSVM/_git/Labbox?path=/SME/PERF/cpu_stress.json",
		"deploymentLinkExternal": "https://labboxprod.azurewebsites.net/api/Labbox?url=https://raw.githubusercontent.com/ivanrusakov/labbox/main/cpu_stress.json"
	},
	"parameters": {
		"resourcePrefix": {
		"type": "String",
		"defaultValue": "highcpu",
		"metadata": {
			"description": "Prefix for all resource names except storage."
			}
		},
		"adminUsername": {
			"type": "String",
			"maxLength": 20,
			"metadata": {
				"description": "Username for the Virtual Machine."
			}
		},
		"adminPassword": {
			"type": "SecureString",
			"minLength": 12,
			"metadata": {
				"description": "Password for the Virtual Machine."
			}
		},
		"yourHomeIP": {
					"type": "string",
					"defaultValue": "*",
					"metadata": {
						"description": "Specify your IP to allow connectivity to the VM from the NSG. Do a quick search for 'my ip' and enter your IP here. This will be placed in your NSG to allow access to the labs. If left as the default value '*', the NSG will use * for the IP address. This is not recommended as CSS policy will automatically remove this rule within a few minutes for security purposes and your LabBox will then require JIT or a new rule with your IP address specified."
					}
				},		
		"location": {
			"defaultValue": "[resourceGroup().location]",
			"type": "String",
			"metadata": {
				"description": "Location for all resources."
			}
		},
		"vmSize": {
			"defaultValue": "Standard_B2ms",
			"type": "String",
			"metadata": {
				"description": "Default VM Size"
			}
		},
		"storageUri": {
			"defaultValue": "[format('str{0}', uniqueString(resourceGroup().id))]",
			"type": "string",
			"metadata": {
				"description": "Name of storage account For Boot Diagnostics"
			}
		},
		"storageAccountType": {
			"type": "string",
			"defaultValue": "Standard_LRS",
			"metadata": {
				"description": "Storage Account type"
			}
		}
	},
	"variables": {
		"nicName": "[concat('nic-', parameters('resourcePrefix'), '-', uniqueString(resourceGroup().id))]",
		"addressPrefix": "10.1.0.0/16",
		"subnetName": "[concat('lan-', parameters('resourcePrefix'), '-', uniqueString(resourceGroup().id))]",
		"subnetPrefix": "10.1.1.0/24",
		"subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
		"vmName": "[concat('vm-', parameters('resourcePrefix'), '-', uniqueString(resourceGroup().id))]",
		"virtualNetworkName": "[concat('vnet-', parameters('resourcePrefix'), '-', uniqueString(resourceGroup().id))]",
		"publicIPAddressName": "[concat('pip-', parameters('resourcePrefix'), '-', uniqueString(resourceGroup().id))]",
		"networkSecurityGroupName": "[concat('nsg-', parameters('resourcePrefix'), '-', uniqueString(resourceGroup().id))]"
	},
	"resources": [
		{
			"type": "Microsoft.Network/publicIPAddresses",
			"apiVersion": "2020-08-01",
			"name": "[variables('publicIPAddressName')]",
			"location": "[parameters('location')]",
			"properties": {
				"publicIPAllocationMethod": "Dynamic"
			}
		},
{
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-08-01",
			"name": "[variables('networkSecurityGroupName')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
					{
						"name": "default-allow-3389",
						"properties": {
							"priority": 1000,
							"access": "Allow",
							"direction": "Inbound",
							"destinationPortRange": "3389",
							"protocol": "Tcp",
							"sourceAddressPrefix": "[parameters('yourHomeIP')]",
							"sourcePortRange": "*",
							"destinationAddressPrefix": "*"
						}
					},
					{
						"name": "default-allow-22",
						"properties": {
							"priority": 1001,
							"access": "Allow",
							"direction": "Inbound",
							"destinationPortRange": "22",
							"protocol": "Tcp",
							"sourceAddressPrefix": "[parameters('yourHomeIP')]",
							"sourcePortRange": "*",
							"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/virtualNetworks",
			"apiVersion": "2020-08-01",
			"name": "[variables('virtualNetworkName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
			],
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[variables('addressPrefix')]"
					]
				},
				"subnets": [
					{
						"name": "[variables('subnetName')]",
						"properties": {
							"addressPrefix": "[variables('subnetPrefix')]",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
							}
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2020-08-01",
			"name": "[variables('nicName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[variables('publicIPAddressName')]",
				"[variables('virtualNetworkName')]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
							},
							"subnet": {
								"id": "[variables('subnetRef')]"
							}
						}
					}
				],
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
				}
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "2021-06-01",
			"name": "[parameters('storageUri')]",
			"location": "[parameters('location')]",
			"sku": {
				"name": "[parameters('storageAccountType')]"
			},
			"kind": "StorageV2",
			"properties": {}
		},
		{
			"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "2020-12-01",
			"name": "[variables('vmName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[variables('nicName')]",
				"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageUri'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"osProfile": {
					"computerName": "[substring(variables('vmName'), 0, 15)]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "MicrosoftWindowsServer",
						"offer": "WindowsServer",
						"sku": "2019-Datacenter",
						"version": "latest"
					},
					"osDisk": {
						"createOption": "FromImage",
						"managedDisk": {
							"storageAccountType": "StandardSSD_LRS"
						}
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
						}
					]
				},
				"diagnosticsProfile": {
					"bootDiagnostics": {
						"enabled": true,
						"storageUri": "[concat('https://', parameters('storageUri'), '.blob.core.windows.net')]"
					}
				}
			},
			"resources": [
				{
					"type": "extensions",
					"name": "CustomScriptExtension",
					"apiVersion": "2023-03-01",
					"location": "[parameters('location')]",
					"dependsOn": [
						"[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
					],
					"properties": {
						"publisher": "Microsoft.Compute",
						"type": "CustomScriptExtension",
						"typeHandlerVersion": "1.10",
						"autoUpgradeMinorVersion": true,
						"settings": {
						"commandToExecute": "deploy.cmd 30 && echo Deployment has started on background && exit 0"
						},
						"protectedSettings": {
						"fileUris": [
							"https://raw.githubusercontent.com/ivanrusakov/labbox/main/cpu_stress.cmd",
							"https://raw.githubusercontent.com/ivanrusakov/labbox/main/cpu_stress.vbs",
							"https://raw.githubusercontent.com/ivanrusakov/labbox/main/cpu_stress.cfg",
							"https://raw.githubusercontent.com/ivanrusakov/labbox/main/install_task.cmd",
							"https://raw.githubusercontent.com/ivanrusakov/labbox/main/deploy.cmd"
						]              
						}
					}
				}
			]
		}
	],
	"outputs": {
		"vmNameOutput": {
			"type": "string",
			"value": "[variables('vmName')]"
		},
		"adminUsernameOutput": {
			"type": "string",
			"value": "[parameters('adminUsername')]"
		}
	}
}
